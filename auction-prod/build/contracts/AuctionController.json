{
  "contractName": "AuctionController",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "auction",
          "type": "address"
        }
      ],
      "name": "AddedNewAuction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "auction",
          "type": "address"
        }
      ],
      "name": "DeletedAuction",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "sellerAddresses",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_seller",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_energyAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minBidValue",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_depositValue",
          "type": "uint256"
        }
      ],
      "name": "deployNewAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "auctionAddress",
          "type": "address"
        }
      ],
      "name": "deleteAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"auction\",\"type\":\"address\"}],\"name\":\"AddedNewAuction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"auction\",\"type\":\"address\"}],\"name\":\"DeletedAuction\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"auctionAddress\",\"type\":\"address\"}],\"name\":\"deleteAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_energyAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minBidValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_depositValue\",\"type\":\"uint256\"}],\"name\":\"deployNewAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sellerAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deleteAuction(address)\":{\"notice\":\"Auction cannot be deleted until either:     (1) Token has been retrieved     (2) Token has expired     (3) Auction has closed with no bids Auction can only be deleted by admin or by the auction seller\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/cristinatorp/Dropbox/Min Mac (nox)/Documents/Skole/Masteroppgave/AuctionCode/auction-prod/contracts/AuctionController.sol\":\"AuctionController\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/cristinatorp/Dropbox/Min Mac (nox)/Documents/Skole/Masteroppgave/AuctionCode/auction-prod/contracts/Auction.sol\":{\"keccak256\":\"0x1ba48dba2559db68449c97643fcfe8b43aa21f29f8553c4b8eb2783ee3a459d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8784a3565710e3e7784779fdced29433854b4d1072c6799f82a1395f73c25290\",\"dweb:/ipfs/QmWTF9HVQk9qNoS5YwzCn8huc4xe3BoWzM2XQrm4KukQru\"]},\"/Users/cristinatorp/Dropbox/Min Mac (nox)/Documents/Skole/Masteroppgave/AuctionCode/auction-prod/contracts/AuctionController.sol\":{\"keccak256\":\"0x106c4a063367b0acc9399c46f9677fd991e464c2f563805505eec99912b6c94a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d75232d5fe2fdc1bb13f04b0d43ba5aa1c3ad3e7bdc79e421712db7926267861\",\"dweb:/ipfs/QmPwxe47phvuzsCUazesSmMfkNufFcEsxThFuYJ23yKKAe\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000465760003560e01c806336965f0c146200004b578063c293424e146200006b578063d7302214146200008b575b600080fd5b62000069600480360381019062000063919062000726565b620000c1565b005b620000896004803603810190620000839190620006fa565b620001c2565b005b620000a96004803603810190620000a39190620006fa565b62000646565b604051620000b891906200086b565b60405180910390f35b600084848484604051620000d59062000679565b620000e4949392919062000888565b604051809103906000f08015801562000101573d6000803e3d6000fd5b50905084600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f8e639806401dbf7654a5bc84e951af5c678e11cf357c18e387fe2b70544b9c5e81604051620001b391906200086b565b60405180910390a15050505050565b6000819050600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480620002ac575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b620002ee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002e590620008d5565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff1663cc689c556040518163ffffffff1660e01b815260040160206040518083038186803b1580156200033757600080fd5b505afa1580156200034c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003729190620007be565b4211801562000403575060008273ffffffffffffffffffffffffffffffffffffffff1663cc689c556040518163ffffffff1660e01b815260040160206040518083038186803b158015620003c557600080fd5b505afa158015620003da573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004009190620007be565b14155b905080620005445760038081111562000445577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8273ffffffffffffffffffffffffffffffffffffffff1663378aa7016040518163ffffffff1660e01b815260040160206040518083038186803b1580156200048c57600080fd5b505afa158015620004a1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004c7919062000792565b600381111562000500577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1462000543576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200053a90620008f7565b60405180910390fd5b5b8173ffffffffffffffffffffffffffffffffffffffff1663c6eb7d4a6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200058d57600080fd5b505af1158015620005a2573d6000803e3d6000fd5b50505050600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690557f401471a47a290325f3b1e6894839a07d25d1466962ad262056eca0071b79e37e836040516200063991906200086b565b60405180910390a1505050565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6138ac8062000aa083390190565b600081359050620006988162000a40565b92915050565b600081359050620006af8162000a5a565b92915050565b600081519050620006c68162000a74565b92915050565b600081359050620006dd8162000a85565b92915050565b600081519050620006f48162000a85565b92915050565b6000602082840312156200070d57600080fd5b60006200071d8482850162000687565b91505092915050565b600080600080608085870312156200073d57600080fd5b60006200074d878288016200069e565b94505060206200076087828801620006cc565b93505060406200077387828801620006cc565b92505060606200078687828801620006cc565b91505092959194509250565b600060208284031215620007a557600080fd5b6000620007b584828501620006b5565b91505092915050565b600060208284031215620007d157600080fd5b6000620007e184828501620006e3565b91505092915050565b620007f5816200093e565b82525050565b62000806816200092a565b82525050565b60006200081b60328362000919565b915062000828826200097c565b604082019050919050565b60006200084260448362000919565b91506200084f82620009cb565b606082019050919050565b620008658162000972565b82525050565b6000602082019050620008826000830184620007fb565b92915050565b60006080820190506200089f6000830187620007ea565b620008ae60208301866200085a565b620008bd60408301856200085a565b620008cc60608301846200085a565b95945050505050565b60006020820190508181036000830152620008f0816200080c565b9050919050565b60006020820190508181036000830152620009128162000833565b9050919050565b600082825260208201905092915050565b6000620009378262000952565b9050919050565b60006200094b8262000952565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f43616e206f6e6c792062652064656c657465642062792061646d696e206f722060008201527f7468652061756374696f6e2073656c6c65720000000000000000000000000000602082015250565b7f43616e6e6f742064656c6574652061756374696f6e206265666f72652074686560008201527f20746f6b656e206861732065787069726564206f72206265656e20726574726960208201527f6576656400000000000000000000000000000000000000000000000000000000604082015250565b62000a4b816200092a565b811462000a5757600080fd5b50565b62000a65816200093e565b811462000a7157600080fd5b50565b6004811062000a8257600080fd5b50565b62000a908162000972565b811462000a9c57600080fd5b5056fe60806040523480156200001157600080fd5b50604051620038ac380380620038ac833981810160405281019062000037919062000285565b6000429050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518060e0016040528060006003811115620000c2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020018673ffffffffffffffffffffffffffffffffffffffff168152602001858152602001600185620000f89190620004b2565b81526020016001846200010c9190620004b2565b8152602001620151808362000122919062000455565b81526020016202a3008362000138919062000455565b815250600160008201518160000160006101000a81548160ff021916908360038111156200018f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010155606082015181600201556080820151816003015560a0820151816004015560c082015181600501559050507fc932bfe1d2a8c99fe45058b82a3d6b37508c1a1eef86e5447bd1588121ab41756001826040516200024492919062000427565b60405180910390a15050505050620006ce565b60008151905062000268816200069a565b92915050565b6000815190506200027f81620006b4565b92915050565b600080600080608085870312156200029c57600080fd5b6000620002ac8782880162000257565b9450506020620002bf878288016200026e565b9350506040620002d2878288016200026e565b9250506060620002e5878288016200026e565b91505092959194509250565b620002fc816200054a565b82525050565b6200030d816200059d565b82525050565b60e0820160008083015490506200032a81620005b1565b62000339600086018262000302565b506200034581620005ed565b620003546020860182620002f1565b50600183015490506200036781620005cf565b62000376604086018262000405565b50600283015490506200038981620005cf565b62000398606086018262000405565b5060038301549050620003ab81620005cf565b620003ba608086018262000405565b5060048301549050620003cd81620005cf565b620003dc60a086018262000405565b5060058301549050620003ef81620005cf565b620003fe60c086018262000405565b5050505050565b620004108162000593565b82525050565b620004218162000593565b82525050565b6000610100820190506200043f600083018562000313565b6200044e60e083018462000416565b9392505050565b6000620004628262000593565b91506200046f8362000593565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620004a757620004a66200060b565b5b828201905092915050565b6000620004bf8262000593565b9150620004cc8362000593565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156200050857620005076200060b565b5b828202905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600060ff82169050919050565b6000819050919050565b6000620005578262000573565b9050919050565b60008190506200056e8262000683565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000620005aa826200055e565b9050919050565b6000620005c8620005c28362000669565b62000533565b9050919050565b6000620005e6620005e08362000669565b62000540565b9050919050565b600062000604620005fe8362000676565b62000513565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60008160001c9050919050565b60008160081c9050919050565b600481106200069757620006966200063a565b5b50565b620006a5816200054a565b8114620006b157600080fd5b50565b620006bf8162000593565b8114620006cb57600080fd5b50565b6131ce80620006de6000396000f3fe6080604052600436106100a75760003560e01c806362ea82db1161006457806362ea82db1461018f578063801f17bb146101d0578063c6eb7d4a146101e7578063cc689c55146101fe578063da984e8014610229578063dfbf53ae14610266576100a7565b80631b347aae146100ac578063378252f2146100d7578063378aa701146100ee5780633910ca10146101195780634684aaee1461013557806355d64d031461015e575b600080fd5b3480156100b857600080fd5b506100c1610292565b6040516100ce91906128ec565b60405180910390f35b3480156100e357600080fd5b506100ec6105e3565b005b3480156100fa57600080fd5b50610103610925565b604051610110919061256e565b60405180910390f35b610133600480360381019061012e919061200e565b61093f565b005b34801561014157600080fd5b5061015c60048036038101906101579190612060565b610c12565b005b34801561016a57600080fd5b50610173610f8c565b6040516101869796959493929190612589565b60405180910390f35b34801561019b57600080fd5b506101b660048036038101906101b19190611fe5565b610fe9565b6040516101c795949392919061251b565b60405180910390f35b3480156101dc57600080fd5b506101e5611039565b005b3480156101f357600080fd5b506101fc611288565b005b34801561020a57600080fd5b50610213611354565b6040516102209190612967565b60405180910390f35b34801561023557600080fd5b50610250600480360381019061024b9190612037565b6113c3565b60405161025d91906124a0565b60405180910390f35b34801561027257600080fd5b5061027b611402565b6040516102899291906124bb565b60405180910390f35b61029a611ee3565b60028060038111156102d5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600160000160009054906101000a900460ff166003811115610320577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610360576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610357906127a6565b60405180910390fd5b6001600501548042116103a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f906128cc565b60405180910390fd5b600760000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461043b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610432906127c6565b60405180910390fd5b6003600160000160006101000a81548160ff0219169083600381111561048a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507f7ed3e08f4e01cb0fc3643e34bcfd45247dec68ed4414209bda9f5e5eab13d0fd33426040516104c09291906124bb565b60405180910390a1600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015481526020016004820154815250509250505090565b60016005015480421161062b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610622906128cc565b60405180910390fd5b6001806003811115610666577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600160000160009054906101000a900460ff1660038111156106b1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146106f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e8906127a6565b60405180910390fd5b6000805b600b805490508110156107de5760096000600b8381548110610740577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16156107cb576001826107c891906129ff565b91505b80806107d690612c73565b9150506106f5565b506000811415610878576003600160000160006101000a81548160ff02191690836003811115610837577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507fe73a313df79df374a265d1ae8069419631a184236f3d97d468b9c2e5505b4e994260405161086b91906126ee565b60405180910390a1610920565b6002600160000160006101000a81548160ff021916908360038111156108c7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507f3dbdd4835dda2d2ea64f4793b53cbfa0bd395cc2bdb266568ccfedbf2f9fde4b600160000160009054906101000a900460ff164260405161090f929190612850565b60405180910390a161091f611434565b5b505050565b6000600160000160009054906101000a900460ff16905090565b600080600381111561097a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600160000160009054906101000a900460ff1660038111156109c5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610a05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fc906127a6565b60405180910390fd5b600160040154804210610a4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4490612644565b60405180910390fd5b600160030154341015610a95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8c906126ce565b60405180910390fd5b6040518060a0016040528060011515815260200184815260200160008152602001600015158152602001600134610acc9190612a55565b815250600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff021916908315150217905550602082015181600101556040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555060808201518160040155905050600b339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd0df58b5e1bbd8539e6d57b602994c90d1fa47191b8066f35d443005eaa4af1c333442604051610c05939291906124e4565b60405180910390a1505050565b6001806003811115610c4d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600160000160009054906101000a900460ff166003811115610c98577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610cd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ccf906127a6565b60405180910390fd5b600160050154804210610d20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1790612644565b60405180910390fd5b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16610daf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da69061271c565b60405180910390fd5b600160020154841015610df7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dee90612830565b60405180910390fd5b60008484604051602001610e0c929190612478565b60405160208183030381529060405280519060200120905080600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015414610ea8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9f9061273c565b60405180910390fd5b6001600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548160ff02191690831515021790555084600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055507f374421a8b171167e98a225a110041abe0534f837136644fa4d77c4bb9b8c2f59338642604051610f7d939291906124e4565b60405180910390a15050505050565b60018060000160009054906101000a900460ff16908060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040154908060050154905087565b60096020528060005260406000206000915090508060000160009054906101000a900460ff16908060010154908060020154908060030160009054906101000a900460ff16908060040154905085565b6000806003811115611074577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600160000160009054906101000a900460ff1660038111156110bf577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146110ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110f6906127a6565b60405180910390fd5b600160040154804211611147576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113e906128cc565b60405180910390fd5b6000600b8054905014156111e5576003600160000160006101000a81548160ff021916908360038111156111a4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507fe73a313df79df374a265d1ae8069419631a184236f3d97d468b9c2e5505b4e99426040516111d891906126a0565b60405180910390a1611284565b60018060000160006101000a81548160ff02191690836003811115611233577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507f3dbdd4835dda2d2ea64f4793b53cbfa0bd395cc2bdb266568ccfedbf2f9fde4b600160000160009054906101000a900460ff164260405161127b929190612664565b60405180910390a15b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611316576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130d906128ac565b60405180910390fd5b600160000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b6000600a6000600760000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040154905090565b600b81815481106113d357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60078060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b600280600381111561146f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600160000160009054906101000a900460ff1660038111156114ba577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146114fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114f1906127a6565b60405180910390fd5b60008060005b600b8054905081101561163c576000600b8281548110611549577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600960008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff166115d05750611629565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154905083811115611626578194508093505b50505b808061163490612c73565b915050611500565b5060405180604001604052808373ffffffffffffffffffffffffffffffffffffffff16815260200182815250600760008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050507ff759f57bf4b808b6e91a1c291d1cc81e47f24aa62e8cf7f6cc30b23822e9ac2b6007426040516116f0929190612907565b60405180910390a16040518060a001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020013073ffffffffffffffffffffffffffffffffffffffff16815260200160018001548152602001428152602001626ebe004261175a91906129ff565b815250600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015560808201518160040155905050611853611858565b505050565b6002806003811115611893577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600160000160009054906101000a900460ff1660038111156118de577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461191e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611915906127a6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600760000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156119b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119aa9061288c565b60405180910390fd5b60005b600b80549050811015611c1a576000600b82815481106119ff577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820160009054906101000a900460ff1615151515815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff1615151515815260200160048201548152505090508060600151611ade575050611c07565b6000600760000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16149050808015611b4b57508160800151826040015110155b15611b5857505050611c07565b600081611b69578260800151611b7e565b82604001518360800151611b7d9190612aaf565b5b90507f7c4000a16d683bc6bd33d5882af0733a8a58704ed6a1fbaaa780a62b7af76d95848242604051611bb3939291906127e6565b60405180910390a18373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611c01573d6000803e3d6000fd5b50505050505b8080611c1290612c73565b9150506119b6565b50611c23611c26565b50565b6002806003811115611c61577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600160000160009054906101000a900460ff166003811115611cac577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14611cec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ce3906127a6565b60405180910390fd5b600060076001015490506000600160000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006040518060400160405280601e81526020017f5472616e7366657220686967686573742062696420746f2073656c6c657200008152509050600160030154831115611d8b5760016003015492506040518060800160405280605d815260200161313c605d913990505b7f7c4000a16d683bc6bd33d5882af0733a8a58704ed6a1fbaaa780a62b7af76d9581838542604051611dc094939291906125f8565b60405180910390a18173ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f19350505050158015611e0e573d6000803e3d6000fd5b5060004790506000811115611ea0577f7c4000a16d683bc6bd33d5882af0733a8a58704ed6a1fbaaa780a62b7af76d95838242604051611e509392919061275c565b60405180910390a18273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611e9e573d6000803e3d6000fd5b505b7ff775d775211952fb6b87f2d722159db37561b0bb5fe510a7f4f8e80731a583e860074742604051611ed493929190612930565b60405180910390a15050505050565b6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081525090565b6000611f51611f4c846129a7565b612982565b905082815260208101848484011115611f6957600080fd5b611f74848285612bcc565b509392505050565b600081359050611f8b816130f6565b92915050565b600081359050611fa08161310d565b92915050565b600082601f830112611fb757600080fd5b8135611fc7848260208601611f3e565b91505092915050565b600081359050611fdf81613124565b92915050565b600060208284031215611ff757600080fd5b600061200584828501611f7c565b91505092915050565b60006020828403121561202057600080fd5b600061202e84828501611f91565b91505092915050565b60006020828403121561204957600080fd5b600061205784828501611fd0565b91505092915050565b6000806040838503121561207357600080fd5b600061208185828601611fd0565b925050602083013567ffffffffffffffff81111561209e57600080fd5b6120aa85828601611fa6565b9150509250929050565b6120bd81612b84565b82525050565b6120cc81612b1f565b82525050565b6120db81612b0d565b82525050565b6120ea81612b0d565b82525050565b6120f981612b31565b82525050565b61210881612b3d565b82525050565b61211781612b96565b82525050565b6000612128826129d8565b61213281856129e3565b9350612142818560208601612bdb565b61214b81612d53565b840191505092915050565b6000612161826129d8565b61216b81856129f4565b935061217b818560208601612bdb565b80840191505092915050565b60006121946019836129e3565b915061219f82612d71565b602082019050919050565b60006121b7600c836129e3565b91506121c282612d9a565b602082019050919050565b60006121da6018836129e3565b91506121e582612dc3565b602082019050919050565b60006121fd6019836129e3565b915061220882612dec565b602082019050919050565b6000612220602f836129e3565b915061222b82612e15565b604082019050919050565b60006122436024836129e3565b915061224e82612e64565b604082019050919050565b60006122666023836129e3565b915061227182612eb3565b604082019050919050565b6000612289600d836129e3565b915061229482612f02565b602082019050919050565b60006122ac6026836129e3565b91506122b782612f2b565b604082019050919050565b60006122cf601f836129e3565b91506122da82612f7a565b602082019050919050565b60006122f26014836129e3565b91506122fd82612fa3565b602082019050919050565b6000612315600a836129e3565b915061232082612fcc565b602082019050919050565b6000612338602f836129e3565b915061234382612ff5565b604082019050919050565b600061235b602b836129e3565b915061236682613044565b604082019050919050565b600061237e602e836129e3565b915061238982613093565b604082019050919050565b60a0820160008201516123aa60008501826120d2565b5060208201516123bd60208501826120d2565b5060408201516123d06040850182612443565b5060608201516123e36060850182612443565b5060808201516123f66080850182612443565b50505050565b60408201600080830154905061241181612c0e565b61241e60008601826120d2565b506001830154905061242f81612c28565b61243c6020860182612443565b5050505050565b61244c81612b7a565b82525050565b61245b81612b7a565b82525050565b61247261246d82612b7a565b612cbc565b82525050565b60006124848285612461565b6020820191506124948284612156565b91508190509392505050565b60006020820190506124b560008301846120e1565b92915050565b60006040820190506124d060008301856120e1565b6124dd6020830184612452565b9392505050565b60006060820190506124f960008301866120e1565b6125066020830185612452565b6125136040830184612452565b949350505050565b600060a08201905061253060008301886120f0565b61253d60208301876120ff565b61254a6040830186612452565b61255760608301856120f0565b6125646080830184612452565b9695505050505050565b6000602082019050612583600083018461210e565b92915050565b600060e08201905061259e600083018a61210e565b6125ab60208301896120c3565b6125b86040830188612452565b6125c56060830187612452565b6125d26080830186612452565b6125df60a0830185612452565b6125ec60c0830184612452565b98975050505050505050565b60006080820190508181036000830152612612818761211d565b905061262160208301866120b4565b61262e6040830185612452565b61263b6060830184612452565b95945050505050565b6000602082019050818103600083015261265d81612187565b9050919050565b6000606082019050818103600083015261267d816121aa565b905061268c602083018561210e565b6126996040830184612452565b9392505050565b600060408201905081810360008301526126b9816121aa565b90506126c86020830184612452565b92915050565b600060208201905081810360008301526126e7816121cd565b9050919050565b60006040820190508181036000830152612707816121f0565b90506127166020830184612452565b92915050565b6000602082019050818103600083015261273581612213565b9050919050565b6000602082019050818103600083015261275581612236565b9050919050565b6000608082019050818103600083015261277581612259565b905061278460208301866120b4565b6127916040830185612452565b61279e6060830184612452565b949350505050565b600060208201905081810360008301526127bf8161227c565b9050919050565b600060208201905081810360008301526127df8161229f565b9050919050565b600060808201905081810360008301526127ff816122c2565b905061280e60208301866120b4565b61281b6040830185612452565b6128286060830184612452565b949350505050565b60006020820190508181036000830152612849816122e5565b9050919050565b6000606082019050818103600083015261286981612308565b9050612878602083018561210e565b6128856040830184612452565b9392505050565b600060208201905081810360008301526128a58161232b565b9050919050565b600060208201905081810360008301526128c58161234e565b9050919050565b600060208201905081810360008301526128e581612371565b9050919050565b600060a0820190506129016000830184612394565b92915050565b600060608201905061291c60008301856123fc565b6129296040830184612452565b9392505050565b600060808201905061294560008301866123fc565b6129526040830185612452565b61295f6060830184612452565b949350505050565b600060208201905061297c6000830184612452565b92915050565b600061298c61299d565b90506129988282612c42565b919050565b6000604051905090565b600067ffffffffffffffff8211156129c2576129c1612d24565b5b6129cb82612d53565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000612a0a82612b7a565b9150612a1583612b7a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612a4a57612a49612cc6565b5b828201905092915050565b6000612a6082612b7a565b9150612a6b83612b7a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612aa457612aa3612cc6565b5b828202905092915050565b6000612aba82612b7a565b9150612ac583612b7a565b925082821015612ad857612ad7612cc6565b5b828203905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000612b1882612b5a565b9050919050565b6000612b2a82612b5a565b9050919050565b60008115159050919050565b6000819050919050565b6000819050612b55826130e2565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000612b8f82612ba8565b9050919050565b6000612ba182612b47565b9050919050565b6000612bb382612bba565b9050919050565b6000612bc582612b5a565b9050919050565b82818337600083830152505050565b60005b83811015612bf9578082015181840152602081019050612bde565b83811115612c08576000848401525b50505050565b6000612c21612c1c83612d64565b612ae3565b9050919050565b6000612c3b612c3683612d64565b612b03565b9050919050565b612c4b82612d53565b810181811067ffffffffffffffff82111715612c6a57612c69612d24565b5b80604052505050565b6000612c7e82612b7a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612cb157612cb0612cc6565b5b600182019050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160001c9050919050565b7f43616e6e6f742062696420616674657220646561646c696e6500000000000000600082015250565b7f48696464656e20726f756e640000000000000000000000000000000000000000600082015250565b7f4465706f7369742076616c756520697320746f6f206c6f770000000000000000600082015250565b7f4f70656e20726f756e642c206e6f2076616c6964206269647300000000000000600082015250565b7f54686973206163636f756e7420686173206e6f742062696464656e20696e207460008201527f68652068696464656e20726f756e640000000000000000000000000000000000602082015250565b7f4f70656e2062696420616e642068696464656e2062696420646f206e6f74206d60008201527f6174636800000000000000000000000000000000000000000000000000000000602082015250565b7f5472616e7366657220636f6e74726163742062616c616e636520746f2073656c60008201527f6c65720000000000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c696420737461746500000000000000000000000000000000000000600082015250565b7f596f7520617265206e6f74207468652077696e6e6572206f662074686520617560008201527f6374696f6e210000000000000000000000000000000000000000000000000000602082015250565b7f5472616e73666572206261636b206465706f73697420746f2062696464657200600082015250565b7f4269642076616c756520697320746f6f206c6f77000000000000000000000000600082015250565b7f4f70656e20726f756e6400000000000000000000000000000000000000000000600082015250565b7f4d7573742066696e6420612077696e6e6572206265666f72652073656e64696e60008201527f67206261636b206465706f736974730000000000000000000000000000000000602082015250565b7f596f7520617265206e6f7420616c6c6f77656420746f2064656c65746520746860008201527f69732061756374696f6e21000000000000000000000000000000000000000000602082015250565b7f43616e6e6f7420706572666f726d207468697320616374696f6e206265666f7260008201527f652074686520646561646c696e65000000000000000000000000000000000000602082015250565b600481106130f3576130f2612cf5565b5b50565b6130ff81612b0d565b811461310a57600080fd5b50565b61311681612b3d565b811461312157600080fd5b50565b61312d81612b7a565b811461313857600080fd5b5056fe5468652068696768657374206269642077617320686967686572207468616e20746865206465706f7369742076616c75652e205472616e7366657272696e6720746865206465706f73697420746f2073656c6c657220696e7374656164a26469706673582212202c640d908cfa142119137547fc550762ead6a41ab5e541c89d5b3778b4c88db764736f6c63430008010033a2646970667358221220ea45472e37b87c130cd9c9e134d5a39498ff3910e41847510ae2dfc47269ee8c64736f6c63430008010033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6813:3",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:3"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:3",
                "type": ""
              }
            ],
            "src": "7:139:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "212:95:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "222:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "244:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "231:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "222:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "295:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "260:34:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "260:41:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "260:41:3"
                }
              ]
            },
            "name": "abi_decode_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "190:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "198:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "206:5:3",
                "type": ""
              }
            ],
            "src": "152:155:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "383:87:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "393:22:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "408:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "402:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "402:13:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "393:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "458:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_enum$_State_$6",
                      "nodeType": "YulIdentifier",
                      "src": "424:33:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "424:40:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "424:40:3"
                }
              ]
            },
            "name": "abi_decode_t_enum$_State_$6_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "361:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "369:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "377:5:3",
                "type": ""
              }
            ],
            "src": "313:157:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "528:87:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "538:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "560:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "547:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "547:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "538:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "603:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "576:26:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "576:33:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "576:33:3"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "506:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "514:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "522:5:3",
                "type": ""
              }
            ],
            "src": "476:139:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "684:80:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "694:22:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "709:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "703:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "703:13:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "694:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "752:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "725:26:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "725:33:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "725:33:3"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "662:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "670:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "678:5:3",
                "type": ""
              }
            ],
            "src": "621:143:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "836:196:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "882:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "891:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "894:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "884:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "884:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "884:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "857:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "866:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "853:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "853:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "878:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "849:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "849:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "846:2:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "908:117:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "923:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "937:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "927:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "952:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "987:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "998:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "983:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "983:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1007:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "962:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "962:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "952:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "806:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "817:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "829:6:3",
                "type": ""
              }
            ],
            "src": "770:262:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1163:589:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1210:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1219:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1222:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1212:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1212:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1212:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1184:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1193:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1180:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1180:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1205:3:3",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1176:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1176:33:3"
                  },
                  "nodeType": "YulIf",
                  "src": "1173:2:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1236:125:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1251:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1265:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1255:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1280:71:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1323:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1334:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1319:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1319:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1343:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "1290:28:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1290:61:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1280:6:3"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1371:118:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1386:16:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1400:2:3",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1390:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1416:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1451:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1462:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1447:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1447:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1471:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1426:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1426:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1416:6:3"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1499:118:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1514:16:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1528:2:3",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1518:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1544:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1579:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1590:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1575:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1575:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1599:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1554:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1554:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "1544:6:3"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1627:118:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1642:16:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1656:2:3",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1646:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1672:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1707:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1718:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1703:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1703:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1727:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1682:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1682:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "1672:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payablet_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1109:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1120:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1132:6:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1140:6:3",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1148:6:3",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1156:6:3",
                "type": ""
              }
            ],
            "src": "1038:714:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1842:214:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1888:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1897:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1900:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1890:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1890:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1890:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1863:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1872:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1859:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1859:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1884:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1855:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1855:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "1852:2:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1914:135:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1929:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1943:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1933:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1958:81:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2011:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2022:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2007:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2007:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2031:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_enum$_State_$6_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1968:38:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1968:71:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1958:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_enum$_State_$6_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1812:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1823:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1835:6:3",
                "type": ""
              }
            ],
            "src": "1758:298:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2139:207:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2185:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2194:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2197:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2187:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2187:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2187:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2160:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2169:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2156:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2156:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2181:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2152:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2152:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "2149:2:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2211:128:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2226:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2240:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2230:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2255:74:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2301:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2312:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2297:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2297:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2321:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2265:31:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2265:64:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2255:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2109:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2120:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2132:6:3",
                "type": ""
              }
            ],
            "src": "2062:284:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2433:61:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2450:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2481:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "2455:25:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2455:32:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2443:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2443:45:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2443:45:3"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2421:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2428:3:3",
                "type": ""
              }
            ],
            "src": "2352:142:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2565:53:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2582:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2605:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2587:17:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2587:24:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2575:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2575:37:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2575:37:3"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2553:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2560:3:3",
                "type": ""
              }
            ],
            "src": "2500:118:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2770:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2780:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2846:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2851:2:3",
                        "type": "",
                        "value": "50"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2787:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2787:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2780:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2952:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_58a59b0be4478df453aa78c06e32215f3c6c90e2e78c67559fbd685e1c094e1e",
                      "nodeType": "YulIdentifier",
                      "src": "2863:88:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2863:93:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2863:93:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2965:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2976:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2981:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2972:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2972:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2965:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_58a59b0be4478df453aa78c06e32215f3c6c90e2e78c67559fbd685e1c094e1e_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2758:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2766:3:3",
                "type": ""
              }
            ],
            "src": "2624:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3142:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3152:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3218:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3223:2:3",
                        "type": "",
                        "value": "68"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3159:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3159:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3152:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3324:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_7361f610730f13d68dae4db0cafeb4dedee1f927d1d5d8c0160731e8ea482991",
                      "nodeType": "YulIdentifier",
                      "src": "3235:88:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3235:93:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3235:93:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3337:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3348:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3353:2:3",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3344:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3344:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3337:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_7361f610730f13d68dae4db0cafeb4dedee1f927d1d5d8c0160731e8ea482991_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3130:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3138:3:3",
                "type": ""
              }
            ],
            "src": "2996:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3433:53:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3450:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3473:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3455:17:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3455:24:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3443:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3443:37:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3443:37:3"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3421:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3428:3:3",
                "type": ""
              }
            ],
            "src": "3368:118:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3590:124:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3600:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3612:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3623:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3608:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3608:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3600:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3680:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3693:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3704:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3689:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3689:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3636:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3636:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3636:71:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3562:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3574:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3585:4:3",
                "type": ""
              }
            ],
            "src": "3492:222:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3918:387:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3928:27:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3940:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3951:3:3",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3936:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3936:19:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3928:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4025:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4038:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4049:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4034:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4034:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3965:59:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3965:87:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3965:87:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4106:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4119:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4130:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4115:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4115:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4062:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4062:72:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4062:72:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4188:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4201:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4212:2:3",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4197:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4197:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4144:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4144:72:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4144:72:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "4270:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4283:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4294:2:3",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4279:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4279:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4226:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4226:72:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4226:72:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_uint256_t_uint256_t_uint256__to_t_address_payable_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3866:9:3",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3878:6:3",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3886:6:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3894:6:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3902:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3913:4:3",
                "type": ""
              }
            ],
            "src": "3720:585:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4482:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4492:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4504:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4515:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4500:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4500:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4492:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4539:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4550:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4535:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4535:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4558:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4564:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4554:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4554:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4528:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4528:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4528:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4584:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4718:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_58a59b0be4478df453aa78c06e32215f3c6c90e2e78c67559fbd685e1c094e1e_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4592:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4592:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4584:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_58a59b0be4478df453aa78c06e32215f3c6c90e2e78c67559fbd685e1c094e1e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4462:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4477:4:3",
                "type": ""
              }
            ],
            "src": "4311:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4907:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4917:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4929:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4940:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4925:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4925:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4917:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4964:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4975:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4960:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4960:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4983:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4989:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4979:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4979:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4953:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4953:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4953:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5009:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5143:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_7361f610730f13d68dae4db0cafeb4dedee1f927d1d5d8c0160731e8ea482991_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5017:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5017:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5009:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7361f610730f13d68dae4db0cafeb4dedee1f927d1d5d8c0160731e8ea482991__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4887:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4902:4:3",
                "type": ""
              }
            ],
            "src": "4736:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5257:73:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5274:3:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5279:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5267:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5267:19:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5267:19:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5295:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5314:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5319:4:3",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5310:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5310:14:3"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "5295:11:3"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5229:3:3",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5234:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "5245:11:3",
                "type": ""
              }
            ],
            "src": "5161:169:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5381:51:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5391:35:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5420:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "5402:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5402:24:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5391:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5363:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5373:7:3",
                "type": ""
              }
            ],
            "src": "5336:96:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5491:51:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5501:35:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5530:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "5512:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5512:24:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5501:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5473:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5483:7:3",
                "type": ""
              }
            ],
            "src": "5438:104:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5593:81:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5603:65:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5618:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5625:42:3",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5614:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5614:54:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5603:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5575:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5585:7:3",
                "type": ""
              }
            ],
            "src": "5548:126:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5725:32:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5735:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5746:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5735:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5707:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5717:7:3",
                "type": ""
              }
            ],
            "src": "5680:77:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5869:131:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5891:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5899:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5887:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5887:14:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5903:34:3",
                        "type": "",
                        "value": "Can only be deleted by admin or "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5880:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5880:58:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5880:58:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5959:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5967:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5955:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5955:15:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5972:20:3",
                        "type": "",
                        "value": "the auction seller"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5948:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5948:45:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5948:45:3"
                }
              ]
            },
            "name": "store_literal_in_memory_58a59b0be4478df453aa78c06e32215f3c6c90e2e78c67559fbd685e1c094e1e",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5861:6:3",
                "type": ""
              }
            ],
            "src": "5763:237:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6112:186:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6134:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6142:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6130:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6130:14:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6146:34:3",
                        "type": "",
                        "value": "Cannot delete auction before the"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6123:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6123:58:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6123:58:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6202:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6210:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6198:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6198:15:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6215:34:3",
                        "type": "",
                        "value": " token has expired or been retri"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6191:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6191:59:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6191:59:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6271:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6279:2:3",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6267:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6267:15:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6284:6:3",
                        "type": "",
                        "value": "eved"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6260:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6260:31:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6260:31:3"
                }
              ]
            },
            "name": "store_literal_in_memory_7361f610730f13d68dae4db0cafeb4dedee1f927d1d5d8c0160731e8ea482991",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6104:6:3",
                "type": ""
              }
            ],
            "src": "6006:292:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6347:79:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6404:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6413:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6416:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6406:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6406:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6406:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6370:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6395:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "6377:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6377:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6367:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6367:35:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6360:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6360:43:3"
                  },
                  "nodeType": "YulIf",
                  "src": "6357:2:3"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6340:5:3",
                "type": ""
              }
            ],
            "src": "6304:122:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6483:87:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6548:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6557:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6560:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6550:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6550:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6550:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6506:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6539:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address_payable",
                              "nodeType": "YulIdentifier",
                              "src": "6513:25:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6513:32:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6503:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6503:43:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6496:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6496:51:3"
                  },
                  "nodeType": "YulIf",
                  "src": "6493:2:3"
                }
              ]
            },
            "name": "validator_revert_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6476:5:3",
                "type": ""
              }
            ],
            "src": "6432:138:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6626:56:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6660:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6669:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6672:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6662:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6662:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6662:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6649:5:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6656:1:3",
                            "type": "",
                            "value": "4"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "6646:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6646:12:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6639:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6639:20:3"
                  },
                  "nodeType": "YulIf",
                  "src": "6636:2:3"
                }
              ]
            },
            "name": "validator_revert_t_enum$_State_$6",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6619:5:3",
                "type": ""
              }
            ],
            "src": "6576:106:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6731:79:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6788:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6797:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6800:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6790:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6790:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6790:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6754:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6779:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "6761:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6761:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6751:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6751:35:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6744:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6744:43:3"
                  },
                  "nodeType": "YulIf",
                  "src": "6741:2:3"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6724:5:3",
                "type": ""
              }
            ],
            "src": "6688:122:3"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_t_enum$_State_$6_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_enum$_State_$6(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_enum$_State_$6_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_State_$6_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_58a59b0be4478df453aa78c06e32215f3c6c90e2e78c67559fbd685e1c094e1e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_58a59b0be4478df453aa78c06e32215f3c6c90e2e78c67559fbd685e1c094e1e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_7361f610730f13d68dae4db0cafeb4dedee1f927d1d5d8c0160731e8ea482991_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 68)\n        store_literal_in_memory_7361f610730f13d68dae4db0cafeb4dedee1f927d1d5d8c0160731e8ea482991(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_payable_t_uint256_t_uint256_t_uint256__to_t_address_payable_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_58a59b0be4478df453aa78c06e32215f3c6c90e2e78c67559fbd685e1c094e1e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_58a59b0be4478df453aa78c06e32215f3c6c90e2e78c67559fbd685e1c094e1e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7361f610730f13d68dae4db0cafeb4dedee1f927d1d5d8c0160731e8ea482991__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7361f610730f13d68dae4db0cafeb4dedee1f927d1d5d8c0160731e8ea482991_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function store_literal_in_memory_58a59b0be4478df453aa78c06e32215f3c6c90e2e78c67559fbd685e1c094e1e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Can only be deleted by admin or \")\n\n        mstore(add(memPtr, 32), \"the auction seller\")\n\n    }\n\n    function store_literal_in_memory_7361f610730f13d68dae4db0cafeb4dedee1f927d1d5d8c0160731e8ea482991(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot delete auction before the\")\n\n        mstore(add(memPtr, 32), \" token has expired or been retri\")\n\n        mstore(add(memPtr, 64), \"eved\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_enum$_State_$6(value) {\n        if iszero(lt(value, 4)) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 3,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "82:1751:1:-:0;;;318:49;;;;;;;;;;350:10;342:5;;:18;;;;;;;;;;;;;;;;;;82:1751;;;;;;",
  "deployedSourceMap": "82:1751:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;373:506;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1126:705;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;142:50;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;373:506;579:18;625:7;647:13;675:12;702:13;600:125;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;579:146;;814:7;775:15;:36;799:10;775:36;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;836:36;860:10;836:36;;;;;;:::i;:::-;;;;;;;;373:506;;;;;:::o;1126:705::-;1190:15;1216:14;1190:41;;1264:15;:31;1280:14;1264:31;;;;;;;;;;;;;;;;;;;;;;;;;1250:45;;:10;:45;;;:68;;;;1313:5;;;;;;;;;;1299:19;;:10;:19;;;1250:68;1242:131;;;;;;;;;;;;:::i;:::-;;;;;;;;;1392:17;1430:7;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1412:15;:46;:83;;;;;1494:1;1462:7;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:33;;1412:83;1392:103;;1510:12;1505:184;;1575:30;1546:59;;;;;;;;;;;;;;;;:7;:23;;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:59;;;;;;;;;;;;;;;;;1538:140;;;;;;;;;;;;:::i;:::-;;;;;;;;;1505:184;1707:7;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1747:15;:31;1763:14;1747:31;;;;;;;;;;;;;;;;1740:38;;;;;;;;;;;1794:30;1809:14;1794:30;;;;;;:::i;:::-;;;;;;;;1126:705;;;:::o;142:50::-;;;;;;;;;;;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:139:3:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:155::-;;244:6;231:20;222:29;;260:41;295:5;260:41;:::i;:::-;212:95;;;;:::o;313:157::-;;408:6;402:13;393:22;;424:40;458:5;424:40;:::i;:::-;383:87;;;;:::o;476:139::-;;560:6;547:20;538:29;;576:33;603:5;576:33;:::i;:::-;528:87;;;;:::o;621:143::-;;709:6;703:13;694:22;;725:33;752:5;725:33;:::i;:::-;684:80;;;;:::o;770:262::-;;878:2;866:9;857:7;853:23;849:32;846:2;;;894:1;891;884:12;846:2;937:1;962:53;1007:7;998:6;987:9;983:22;962:53;:::i;:::-;952:63;;908:117;836:196;;;;:::o;1038:714::-;;;;;1205:3;1193:9;1184:7;1180:23;1176:33;1173:2;;;1222:1;1219;1212:12;1173:2;1265:1;1290:61;1343:7;1334:6;1323:9;1319:22;1290:61;:::i;:::-;1280:71;;1236:125;1400:2;1426:53;1471:7;1462:6;1451:9;1447:22;1426:53;:::i;:::-;1416:63;;1371:118;1528:2;1554:53;1599:7;1590:6;1579:9;1575:22;1554:53;:::i;:::-;1544:63;;1499:118;1656:2;1682:53;1727:7;1718:6;1707:9;1703:22;1682:53;:::i;:::-;1672:63;;1627:118;1163:589;;;;;;;:::o;1758:298::-;;1884:2;1872:9;1863:7;1859:23;1855:32;1852:2;;;1900:1;1897;1890:12;1852:2;1943:1;1968:71;2031:7;2022:6;2011:9;2007:22;1968:71;:::i;:::-;1958:81;;1914:135;1842:214;;;;:::o;2062:284::-;;2181:2;2169:9;2160:7;2156:23;2152:32;2149:2;;;2197:1;2194;2187:12;2149:2;2240:1;2265:64;2321:7;2312:6;2301:9;2297:22;2265:64;:::i;:::-;2255:74;;2211:128;2139:207;;;;:::o;2352:142::-;2455:32;2481:5;2455:32;:::i;:::-;2450:3;2443:45;2433:61;;:::o;2500:118::-;2587:24;2605:5;2587:24;:::i;:::-;2582:3;2575:37;2565:53;;:::o;2624:366::-;;2787:67;2851:2;2846:3;2787:67;:::i;:::-;2780:74;;2863:93;2952:3;2863:93;:::i;:::-;2981:2;2976:3;2972:12;2965:19;;2770:220;;;:::o;2996:366::-;;3159:67;3223:2;3218:3;3159:67;:::i;:::-;3152:74;;3235:93;3324:3;3235:93;:::i;:::-;3353:2;3348:3;3344:12;3337:19;;3142:220;;;:::o;3368:118::-;3455:24;3473:5;3455:24;:::i;:::-;3450:3;3443:37;3433:53;;:::o;3492:222::-;;3623:2;3612:9;3608:18;3600:26;;3636:71;3704:1;3693:9;3689:17;3680:6;3636:71;:::i;:::-;3590:124;;;;:::o;3720:585::-;;3951:3;3940:9;3936:19;3928:27;;3965:87;4049:1;4038:9;4034:17;4025:6;3965:87;:::i;:::-;4062:72;4130:2;4119:9;4115:18;4106:6;4062:72;:::i;:::-;4144;4212:2;4201:9;4197:18;4188:6;4144:72;:::i;:::-;4226;4294:2;4283:9;4279:18;4270:6;4226:72;:::i;:::-;3918:387;;;;;;;:::o;4311:419::-;;4515:2;4504:9;4500:18;4492:26;;4564:9;4558:4;4554:20;4550:1;4539:9;4535:17;4528:47;4592:131;4718:4;4592:131;:::i;:::-;4584:139;;4482:248;;;:::o;4736:419::-;;4940:2;4929:9;4925:18;4917:26;;4989:9;4983:4;4979:20;4975:1;4964:9;4960:17;4953:47;5017:131;5143:4;5017:131;:::i;:::-;5009:139;;4907:248;;;:::o;5161:169::-;;5279:6;5274:3;5267:19;5319:4;5314:3;5310:14;5295:29;;5257:73;;;;:::o;5336:96::-;;5402:24;5420:5;5402:24;:::i;:::-;5391:35;;5381:51;;;:::o;5438:104::-;;5512:24;5530:5;5512:24;:::i;:::-;5501:35;;5491:51;;;:::o;5548:126::-;;5625:42;5618:5;5614:54;5603:65;;5593:81;;;:::o;5680:77::-;;5746:5;5735:16;;5725:32;;;:::o;5763:237::-;5903:34;5899:1;5891:6;5887:14;5880:58;5972:20;5967:2;5959:6;5955:15;5948:45;5869:131;:::o;6006:292::-;6146:34;6142:1;6134:6;6130:14;6123:58;6215:34;6210:2;6202:6;6198:15;6191:59;6284:6;6279:2;6271:6;6267:15;6260:31;6112:186;:::o;6304:122::-;6377:24;6395:5;6377:24;:::i;:::-;6370:5;6367:35;6357:2;;6416:1;6413;6406:12;6357:2;6347:79;:::o;6432:138::-;6513:32;6539:5;6513:32;:::i;:::-;6506:5;6503:43;6493:2;;6560:1;6557;6550:12;6493:2;6483:87;:::o;6576:106::-;6656:1;6649:5;6646:12;6636:2;;6672:1;6669;6662:12;6636:2;6626:56;:::o;6688:122::-;6761:24;6779:5;6761:24;:::i;:::-;6754:5;6751:35;6741:2;;6800:1;6797;6790:12;6741:2;6731:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.1;\n\nimport \"./Auction.sol\";\n\ncontract AuctionController {\n    address private admin;\n    mapping(address => address) public sellerAddresses; // auction addr => seller addr\n\n    event AddedNewAuction(address auction);\n    event DeletedAuction(address auction);\n\n    constructor() {\n        admin = msg.sender;\n    }\n\n    function deployNewAuction(\n        address payable _seller, \n        uint _energyAmount, \n        uint _minBidValue,\n        uint _depositValue\n    ) public {\n        // Deploy new auction contract\n        Auction newAuction = new Auction(\n            _seller, \n            _energyAmount, \n            _minBidValue, \n            _depositValue\n        );\n        \n        // Save seller address\n        sellerAddresses[address(newAuction)] = _seller;\n        emit AddedNewAuction(address(newAuction));\n    }\n\n    /// Auction cannot be deleted until either:\n    ///     (1) Token has been retrieved\n    ///     (2) Token has expired\n    ///     (3) Auction has closed with no bids\n    /// Auction can only be deleted by admin or by the auction seller\n    function deleteAuction(address auctionAddress) public {\n        Auction auction = Auction(auctionAddress);\n\n        require(msg.sender == sellerAddresses[auctionAddress] || msg.sender == admin, \"Can only be deleted by admin or the auction seller\");\n        \n        bool tokenExpired = block.timestamp > auction.getTokenValidUntil() && auction.getTokenValidUntil() != 0;\n        if (!tokenExpired) {\n            require(auction.getCurrentState() == Auction.State.ReadyForDeletion, \"Cannot delete auction before the token has expired or been retrieved\");\n        }\n        \n        auction.deleteAuction();\n        delete sellerAddresses[auctionAddress];\n\n        emit DeletedAuction(auctionAddress);\n    }\n}",
  "sourcePath": "/Users/cristinatorp/Dropbox/Min Mac (nox)/Documents/Skole/Masteroppgave/AuctionCode/auction-prod/contracts/AuctionController.sol",
  "ast": {
    "absolutePath": "/Users/cristinatorp/Dropbox/Min Mac (nox)/Documents/Skole/Masteroppgave/AuctionCode/auction-prod/contracts/AuctionController.sol",
    "exportedSymbols": {
      "Auction": [
        856
      ],
      "AuctionController": [
        996
      ]
    },
    "id": 997,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 858,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:1"
      },
      {
        "absolutePath": "/Users/cristinatorp/Dropbox/Min Mac (nox)/Documents/Skole/Masteroppgave/AuctionCode/auction-prod/contracts/Auction.sol",
        "file": "./Auction.sol",
        "id": 859,
        "nodeType": "ImportDirective",
        "scope": 997,
        "sourceUnit": 857,
        "src": "57:23:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          856
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 996,
        "linearizedBaseContracts": [
          996
        ],
        "name": "AuctionController",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 861,
            "mutability": "mutable",
            "name": "admin",
            "nodeType": "VariableDeclaration",
            "scope": 996,
            "src": "115:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 860,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "115:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "d7302214",
            "id": 865,
            "mutability": "mutable",
            "name": "sellerAddresses",
            "nodeType": "VariableDeclaration",
            "scope": 996,
            "src": "142:50:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 864,
              "keyType": {
                "id": 862,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "150:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "142:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 863,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "161:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 869,
            "name": "AddedNewAuction",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 868,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 867,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "auction",
                  "nodeType": "VariableDeclaration",
                  "scope": 869,
                  "src": "252:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 866,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "252:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "251:17:1"
            },
            "src": "230:39:1"
          },
          {
            "anonymous": false,
            "id": 873,
            "name": "DeletedAuction",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 871,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "auction",
                  "nodeType": "VariableDeclaration",
                  "scope": 873,
                  "src": "295:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 870,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "295:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "294:17:1"
            },
            "src": "274:38:1"
          },
          {
            "body": {
              "id": 881,
              "nodeType": "Block",
              "src": "332:35:1",
              "statements": [
                {
                  "expression": {
                    "id": 879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 876,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 861,
                      "src": "342:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 877,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "350:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "350:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "342:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 880,
                  "nodeType": "ExpressionStatement",
                  "src": "342:18:1"
                }
              ]
            },
            "id": 882,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 874,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "329:2:1"
            },
            "returnParameters": {
              "id": 875,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "332:0:1"
            },
            "scope": 996,
            "src": "318:49:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 921,
              "nodeType": "Block",
              "src": "530:349:1",
              "statements": [
                {
                  "assignments": [
                    895
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 895,
                      "mutability": "mutable",
                      "name": "newAuction",
                      "nodeType": "VariableDeclaration",
                      "scope": 921,
                      "src": "579:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Auction_$856",
                        "typeString": "contract Auction"
                      },
                      "typeName": {
                        "id": 894,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 893,
                          "name": "Auction",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 856,
                          "src": "579:7:1"
                        },
                        "referencedDeclaration": 856,
                        "src": "579:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Auction_$856",
                          "typeString": "contract Auction"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 904,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 899,
                        "name": "_seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 884,
                        "src": "625:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 900,
                        "name": "_energyAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 886,
                        "src": "647:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 901,
                        "name": "_minBidValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 888,
                        "src": "675:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 902,
                        "name": "_depositValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 890,
                        "src": "702:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "600:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_payable_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_contract$_Auction_$856_$",
                        "typeString": "function (address payable,uint256,uint256,uint256) returns (contract Auction)"
                      },
                      "typeName": {
                        "id": 897,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 896,
                          "name": "Auction",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 856,
                          "src": "604:7:1"
                        },
                        "referencedDeclaration": 856,
                        "src": "604:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Auction_$856",
                          "typeString": "contract Auction"
                        }
                      }
                    },
                    "id": 903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "600:125:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Auction_$856",
                      "typeString": "contract Auction"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "579:146:1"
                },
                {
                  "expression": {
                    "id": 912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 905,
                        "name": "sellerAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 865,
                        "src": "775:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 910,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 908,
                            "name": "newAuction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 895,
                            "src": "799:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Auction_$856",
                              "typeString": "contract Auction"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Auction_$856",
                              "typeString": "contract Auction"
                            }
                          ],
                          "id": 907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "791:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 906,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "791:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "791:19:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "775:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 911,
                      "name": "_seller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 884,
                      "src": "814:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "775:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 913,
                  "nodeType": "ExpressionStatement",
                  "src": "775:46:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 917,
                            "name": "newAuction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 895,
                            "src": "860:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Auction_$856",
                              "typeString": "contract Auction"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Auction_$856",
                              "typeString": "contract Auction"
                            }
                          ],
                          "id": 916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "852:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 915,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "852:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "852:19:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 914,
                      "name": "AddedNewAuction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 869,
                      "src": "836:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "836:36:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 920,
                  "nodeType": "EmitStatement",
                  "src": "831:41:1"
                }
              ]
            },
            "functionSelector": "36965f0c",
            "id": 922,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployNewAuction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 884,
                  "mutability": "mutable",
                  "name": "_seller",
                  "nodeType": "VariableDeclaration",
                  "scope": 922,
                  "src": "408:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 883,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "408:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 886,
                  "mutability": "mutable",
                  "name": "_energyAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 922,
                  "src": "442:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 885,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "442:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 888,
                  "mutability": "mutable",
                  "name": "_minBidValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 922,
                  "src": "471:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 887,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "471:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 890,
                  "mutability": "mutable",
                  "name": "_depositValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 922,
                  "src": "498:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 889,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "498:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "398:124:1"
            },
            "returnParameters": {
              "id": 892,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "530:0:1"
            },
            "scope": 996,
            "src": "373:506:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 994,
              "nodeType": "Block",
              "src": "1180:651:1",
              "statements": [
                {
                  "assignments": [
                    930
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 930,
                      "mutability": "mutable",
                      "name": "auction",
                      "nodeType": "VariableDeclaration",
                      "scope": 994,
                      "src": "1190:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Auction_$856",
                        "typeString": "contract Auction"
                      },
                      "typeName": {
                        "id": 929,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 928,
                          "name": "Auction",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 856,
                          "src": "1190:7:1"
                        },
                        "referencedDeclaration": 856,
                        "src": "1190:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Auction_$856",
                          "typeString": "contract Auction"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 934,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 932,
                        "name": "auctionAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 925,
                        "src": "1216:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 931,
                      "name": "Auction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 856,
                      "src": "1208:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Auction_$856_$",
                        "typeString": "type(contract Auction)"
                      }
                    },
                    "id": 933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1208:23:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Auction_$856",
                      "typeString": "contract Auction"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1190:41:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 936,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1250:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 937,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1250:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 938,
                              "name": "sellerAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 865,
                              "src": "1264:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 940,
                            "indexExpression": {
                              "id": 939,
                              "name": "auctionAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 925,
                              "src": "1280:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1264:31:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1250:45:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 942,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1299:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 943,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1299:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 944,
                            "name": "admin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 861,
                            "src": "1313:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1299:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1250:68:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e206f6e6c792062652064656c657465642062792061646d696e206f72207468652061756374696f6e2073656c6c6572",
                        "id": 947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1320:52:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_58a59b0be4478df453aa78c06e32215f3c6c90e2e78c67559fbd685e1c094e1e",
                          "typeString": "literal_string \"Can only be deleted by admin or the auction seller\""
                        },
                        "value": "Can only be deleted by admin or the auction seller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_58a59b0be4478df453aa78c06e32215f3c6c90e2e78c67559fbd685e1c094e1e",
                          "typeString": "literal_string \"Can only be deleted by admin or the auction seller\""
                        }
                      ],
                      "id": 935,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1242:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1242:131:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 949,
                  "nodeType": "ExpressionStatement",
                  "src": "1242:131:1"
                },
                {
                  "assignments": [
                    951
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 951,
                      "mutability": "mutable",
                      "name": "tokenExpired",
                      "nodeType": "VariableDeclaration",
                      "scope": 994,
                      "src": "1392:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 950,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1392:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 964,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 952,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "1412:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "1412:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 954,
                            "name": "auction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 930,
                            "src": "1430:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Auction_$856",
                              "typeString": "contract Auction"
                            }
                          },
                          "id": 955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getTokenValidUntil",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 838,
                          "src": "1430:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1430:28:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1412:46:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 958,
                            "name": "auction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 930,
                            "src": "1462:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Auction_$856",
                              "typeString": "contract Auction"
                            }
                          },
                          "id": 959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getTokenValidUntil",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 838,
                          "src": "1462:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1462:28:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1494:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "1462:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1412:83:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1392:103:1"
                },
                {
                  "condition": {
                    "id": 966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1509:13:1",
                    "subExpression": {
                      "id": 965,
                      "name": "tokenExpired",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 951,
                      "src": "1510:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 979,
                  "nodeType": "IfStatement",
                  "src": "1505:184:1",
                  "trueBody": {
                    "id": 978,
                    "nodeType": "Block",
                    "src": "1524:165:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_State_$6",
                                "typeString": "enum Auction.State"
                              },
                              "id": 974,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 968,
                                    "name": "auction",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 930,
                                    "src": "1546:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Auction_$856",
                                      "typeString": "contract Auction"
                                    }
                                  },
                                  "id": 969,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getCurrentState",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 826,
                                  "src": "1546:23:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_enum$_State_$6_$",
                                    "typeString": "function () view external returns (enum Auction.State)"
                                  }
                                },
                                "id": 970,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1546:25:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_State_$6",
                                  "typeString": "enum Auction.State"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 971,
                                    "name": "Auction",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 856,
                                    "src": "1575:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Auction_$856_$",
                                      "typeString": "type(contract Auction)"
                                    }
                                  },
                                  "id": 972,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "State",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 6,
                                  "src": "1575:13:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_State_$6_$",
                                    "typeString": "type(enum Auction.State)"
                                  }
                                },
                                "id": 973,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ReadyForDeletion",
                                "nodeType": "MemberAccess",
                                "src": "1575:30:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_State_$6",
                                  "typeString": "enum Auction.State"
                                }
                              },
                              "src": "1546:59:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e6e6f742064656c6574652061756374696f6e206265666f72652074686520746f6b656e206861732065787069726564206f72206265656e20726574726965766564",
                              "id": 975,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1607:70:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7361f610730f13d68dae4db0cafeb4dedee1f927d1d5d8c0160731e8ea482991",
                                "typeString": "literal_string \"Cannot delete auction before the token has expired or been retrieved\""
                              },
                              "value": "Cannot delete auction before the token has expired or been retrieved"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7361f610730f13d68dae4db0cafeb4dedee1f927d1d5d8c0160731e8ea482991",
                                "typeString": "literal_string \"Cannot delete auction before the token has expired or been retrieved\""
                              }
                            ],
                            "id": 967,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1538:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1538:140:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 977,
                        "nodeType": "ExpressionStatement",
                        "src": "1538:140:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 980,
                        "name": "auction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 930,
                        "src": "1707:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Auction_$856",
                          "typeString": "contract Auction"
                        }
                      },
                      "id": 982,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deleteAuction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 855,
                      "src": "1707:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1707:23:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 984,
                  "nodeType": "ExpressionStatement",
                  "src": "1707:23:1"
                },
                {
                  "expression": {
                    "id": 988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "1740:38:1",
                    "subExpression": {
                      "baseExpression": {
                        "id": 985,
                        "name": "sellerAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 865,
                        "src": "1747:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 987,
                      "indexExpression": {
                        "id": 986,
                        "name": "auctionAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 925,
                        "src": "1763:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1747:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 989,
                  "nodeType": "ExpressionStatement",
                  "src": "1740:38:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 991,
                        "name": "auctionAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 925,
                        "src": "1809:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 990,
                      "name": "DeletedAuction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 873,
                      "src": "1794:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1794:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 993,
                  "nodeType": "EmitStatement",
                  "src": "1789:35:1"
                }
              ]
            },
            "documentation": {
              "id": 923,
              "nodeType": "StructuredDocumentation",
              "src": "885:236:1",
              "text": "Auction cannot be deleted until either:\n     (1) Token has been retrieved\n     (2) Token has expired\n     (3) Auction has closed with no bids\n Auction can only be deleted by admin or by the auction seller"
            },
            "functionSelector": "c293424e",
            "id": 995,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deleteAuction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 926,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 925,
                  "mutability": "mutable",
                  "name": "auctionAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 995,
                  "src": "1149:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 924,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1149:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1148:24:1"
            },
            "returnParameters": {
              "id": 927,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1180:0:1"
            },
            "scope": 996,
            "src": "1126:705:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 997,
        "src": "82:1751:1"
      }
    ],
    "src": "32:1801:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/cristinatorp/Dropbox/Min Mac (nox)/Documents/Skole/Masteroppgave/AuctionCode/auction-prod/contracts/AuctionController.sol",
    "exportedSymbols": {
      "Auction": [
        856
      ],
      "AuctionController": [
        996
      ]
    },
    "id": 997,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 858,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:1"
      },
      {
        "absolutePath": "/Users/cristinatorp/Dropbox/Min Mac (nox)/Documents/Skole/Masteroppgave/AuctionCode/auction-prod/contracts/Auction.sol",
        "file": "./Auction.sol",
        "id": 859,
        "nodeType": "ImportDirective",
        "scope": 997,
        "sourceUnit": 857,
        "src": "57:23:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          856
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 996,
        "linearizedBaseContracts": [
          996
        ],
        "name": "AuctionController",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 861,
            "mutability": "mutable",
            "name": "admin",
            "nodeType": "VariableDeclaration",
            "scope": 996,
            "src": "115:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 860,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "115:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "d7302214",
            "id": 865,
            "mutability": "mutable",
            "name": "sellerAddresses",
            "nodeType": "VariableDeclaration",
            "scope": 996,
            "src": "142:50:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 864,
              "keyType": {
                "id": 862,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "150:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "142:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 863,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "161:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 869,
            "name": "AddedNewAuction",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 868,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 867,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "auction",
                  "nodeType": "VariableDeclaration",
                  "scope": 869,
                  "src": "252:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 866,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "252:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "251:17:1"
            },
            "src": "230:39:1"
          },
          {
            "anonymous": false,
            "id": 873,
            "name": "DeletedAuction",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 871,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "auction",
                  "nodeType": "VariableDeclaration",
                  "scope": 873,
                  "src": "295:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 870,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "295:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "294:17:1"
            },
            "src": "274:38:1"
          },
          {
            "body": {
              "id": 881,
              "nodeType": "Block",
              "src": "332:35:1",
              "statements": [
                {
                  "expression": {
                    "id": 879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 876,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 861,
                      "src": "342:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 877,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "350:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "350:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "342:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 880,
                  "nodeType": "ExpressionStatement",
                  "src": "342:18:1"
                }
              ]
            },
            "id": 882,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 874,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "329:2:1"
            },
            "returnParameters": {
              "id": 875,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "332:0:1"
            },
            "scope": 996,
            "src": "318:49:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 921,
              "nodeType": "Block",
              "src": "530:349:1",
              "statements": [
                {
                  "assignments": [
                    895
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 895,
                      "mutability": "mutable",
                      "name": "newAuction",
                      "nodeType": "VariableDeclaration",
                      "scope": 921,
                      "src": "579:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Auction_$856",
                        "typeString": "contract Auction"
                      },
                      "typeName": {
                        "id": 894,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 893,
                          "name": "Auction",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 856,
                          "src": "579:7:1"
                        },
                        "referencedDeclaration": 856,
                        "src": "579:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Auction_$856",
                          "typeString": "contract Auction"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 904,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 899,
                        "name": "_seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 884,
                        "src": "625:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 900,
                        "name": "_energyAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 886,
                        "src": "647:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 901,
                        "name": "_minBidValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 888,
                        "src": "675:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 902,
                        "name": "_depositValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 890,
                        "src": "702:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "600:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_payable_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_contract$_Auction_$856_$",
                        "typeString": "function (address payable,uint256,uint256,uint256) returns (contract Auction)"
                      },
                      "typeName": {
                        "id": 897,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 896,
                          "name": "Auction",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 856,
                          "src": "604:7:1"
                        },
                        "referencedDeclaration": 856,
                        "src": "604:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Auction_$856",
                          "typeString": "contract Auction"
                        }
                      }
                    },
                    "id": 903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "600:125:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Auction_$856",
                      "typeString": "contract Auction"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "579:146:1"
                },
                {
                  "expression": {
                    "id": 912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 905,
                        "name": "sellerAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 865,
                        "src": "775:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 910,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 908,
                            "name": "newAuction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 895,
                            "src": "799:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Auction_$856",
                              "typeString": "contract Auction"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Auction_$856",
                              "typeString": "contract Auction"
                            }
                          ],
                          "id": 907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "791:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 906,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "791:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "791:19:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "775:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 911,
                      "name": "_seller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 884,
                      "src": "814:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "775:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 913,
                  "nodeType": "ExpressionStatement",
                  "src": "775:46:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 917,
                            "name": "newAuction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 895,
                            "src": "860:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Auction_$856",
                              "typeString": "contract Auction"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Auction_$856",
                              "typeString": "contract Auction"
                            }
                          ],
                          "id": 916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "852:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 915,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "852:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "852:19:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 914,
                      "name": "AddedNewAuction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 869,
                      "src": "836:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "836:36:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 920,
                  "nodeType": "EmitStatement",
                  "src": "831:41:1"
                }
              ]
            },
            "functionSelector": "36965f0c",
            "id": 922,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployNewAuction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 884,
                  "mutability": "mutable",
                  "name": "_seller",
                  "nodeType": "VariableDeclaration",
                  "scope": 922,
                  "src": "408:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 883,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "408:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 886,
                  "mutability": "mutable",
                  "name": "_energyAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 922,
                  "src": "442:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 885,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "442:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 888,
                  "mutability": "mutable",
                  "name": "_minBidValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 922,
                  "src": "471:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 887,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "471:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 890,
                  "mutability": "mutable",
                  "name": "_depositValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 922,
                  "src": "498:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 889,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "498:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "398:124:1"
            },
            "returnParameters": {
              "id": 892,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "530:0:1"
            },
            "scope": 996,
            "src": "373:506:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 994,
              "nodeType": "Block",
              "src": "1180:651:1",
              "statements": [
                {
                  "assignments": [
                    930
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 930,
                      "mutability": "mutable",
                      "name": "auction",
                      "nodeType": "VariableDeclaration",
                      "scope": 994,
                      "src": "1190:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Auction_$856",
                        "typeString": "contract Auction"
                      },
                      "typeName": {
                        "id": 929,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 928,
                          "name": "Auction",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 856,
                          "src": "1190:7:1"
                        },
                        "referencedDeclaration": 856,
                        "src": "1190:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Auction_$856",
                          "typeString": "contract Auction"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 934,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 932,
                        "name": "auctionAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 925,
                        "src": "1216:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 931,
                      "name": "Auction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 856,
                      "src": "1208:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Auction_$856_$",
                        "typeString": "type(contract Auction)"
                      }
                    },
                    "id": 933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1208:23:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Auction_$856",
                      "typeString": "contract Auction"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1190:41:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 936,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1250:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 937,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1250:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 938,
                              "name": "sellerAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 865,
                              "src": "1264:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 940,
                            "indexExpression": {
                              "id": 939,
                              "name": "auctionAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 925,
                              "src": "1280:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1264:31:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1250:45:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 942,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1299:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 943,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1299:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 944,
                            "name": "admin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 861,
                            "src": "1313:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1299:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1250:68:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e206f6e6c792062652064656c657465642062792061646d696e206f72207468652061756374696f6e2073656c6c6572",
                        "id": 947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1320:52:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_58a59b0be4478df453aa78c06e32215f3c6c90e2e78c67559fbd685e1c094e1e",
                          "typeString": "literal_string \"Can only be deleted by admin or the auction seller\""
                        },
                        "value": "Can only be deleted by admin or the auction seller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_58a59b0be4478df453aa78c06e32215f3c6c90e2e78c67559fbd685e1c094e1e",
                          "typeString": "literal_string \"Can only be deleted by admin or the auction seller\""
                        }
                      ],
                      "id": 935,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1242:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1242:131:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 949,
                  "nodeType": "ExpressionStatement",
                  "src": "1242:131:1"
                },
                {
                  "assignments": [
                    951
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 951,
                      "mutability": "mutable",
                      "name": "tokenExpired",
                      "nodeType": "VariableDeclaration",
                      "scope": 994,
                      "src": "1392:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 950,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1392:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 964,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 952,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "1412:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "1412:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 954,
                            "name": "auction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 930,
                            "src": "1430:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Auction_$856",
                              "typeString": "contract Auction"
                            }
                          },
                          "id": 955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getTokenValidUntil",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 838,
                          "src": "1430:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1430:28:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1412:46:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 958,
                            "name": "auction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 930,
                            "src": "1462:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Auction_$856",
                              "typeString": "contract Auction"
                            }
                          },
                          "id": 959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getTokenValidUntil",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 838,
                          "src": "1462:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1462:28:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1494:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "1462:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1412:83:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1392:103:1"
                },
                {
                  "condition": {
                    "id": 966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1509:13:1",
                    "subExpression": {
                      "id": 965,
                      "name": "tokenExpired",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 951,
                      "src": "1510:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 979,
                  "nodeType": "IfStatement",
                  "src": "1505:184:1",
                  "trueBody": {
                    "id": 978,
                    "nodeType": "Block",
                    "src": "1524:165:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_State_$6",
                                "typeString": "enum Auction.State"
                              },
                              "id": 974,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 968,
                                    "name": "auction",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 930,
                                    "src": "1546:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Auction_$856",
                                      "typeString": "contract Auction"
                                    }
                                  },
                                  "id": 969,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getCurrentState",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 826,
                                  "src": "1546:23:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_enum$_State_$6_$",
                                    "typeString": "function () view external returns (enum Auction.State)"
                                  }
                                },
                                "id": 970,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1546:25:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_State_$6",
                                  "typeString": "enum Auction.State"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 971,
                                    "name": "Auction",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 856,
                                    "src": "1575:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Auction_$856_$",
                                      "typeString": "type(contract Auction)"
                                    }
                                  },
                                  "id": 972,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "State",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 6,
                                  "src": "1575:13:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_State_$6_$",
                                    "typeString": "type(enum Auction.State)"
                                  }
                                },
                                "id": 973,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ReadyForDeletion",
                                "nodeType": "MemberAccess",
                                "src": "1575:30:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_State_$6",
                                  "typeString": "enum Auction.State"
                                }
                              },
                              "src": "1546:59:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e6e6f742064656c6574652061756374696f6e206265666f72652074686520746f6b656e206861732065787069726564206f72206265656e20726574726965766564",
                              "id": 975,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1607:70:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7361f610730f13d68dae4db0cafeb4dedee1f927d1d5d8c0160731e8ea482991",
                                "typeString": "literal_string \"Cannot delete auction before the token has expired or been retrieved\""
                              },
                              "value": "Cannot delete auction before the token has expired or been retrieved"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7361f610730f13d68dae4db0cafeb4dedee1f927d1d5d8c0160731e8ea482991",
                                "typeString": "literal_string \"Cannot delete auction before the token has expired or been retrieved\""
                              }
                            ],
                            "id": 967,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1538:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1538:140:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 977,
                        "nodeType": "ExpressionStatement",
                        "src": "1538:140:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 980,
                        "name": "auction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 930,
                        "src": "1707:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Auction_$856",
                          "typeString": "contract Auction"
                        }
                      },
                      "id": 982,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deleteAuction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 855,
                      "src": "1707:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1707:23:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 984,
                  "nodeType": "ExpressionStatement",
                  "src": "1707:23:1"
                },
                {
                  "expression": {
                    "id": 988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "1740:38:1",
                    "subExpression": {
                      "baseExpression": {
                        "id": 985,
                        "name": "sellerAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 865,
                        "src": "1747:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 987,
                      "indexExpression": {
                        "id": 986,
                        "name": "auctionAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 925,
                        "src": "1763:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1747:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 989,
                  "nodeType": "ExpressionStatement",
                  "src": "1740:38:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 991,
                        "name": "auctionAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 925,
                        "src": "1809:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 990,
                      "name": "DeletedAuction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 873,
                      "src": "1794:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1794:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 993,
                  "nodeType": "EmitStatement",
                  "src": "1789:35:1"
                }
              ]
            },
            "documentation": {
              "id": 923,
              "nodeType": "StructuredDocumentation",
              "src": "885:236:1",
              "text": "Auction cannot be deleted until either:\n     (1) Token has been retrieved\n     (2) Token has expired\n     (3) Auction has closed with no bids\n Auction can only be deleted by admin or by the auction seller"
            },
            "functionSelector": "c293424e",
            "id": 995,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deleteAuction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 926,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 925,
                  "mutability": "mutable",
                  "name": "auctionAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 995,
                  "src": "1149:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 924,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1149:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1148:24:1"
            },
            "returnParameters": {
              "id": 927,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1180:0:1"
            },
            "scope": 996,
            "src": "1126:705:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 997,
        "src": "82:1751:1"
      }
    ],
    "src": "32:1801:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.1+commit.df193b15.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x21A9D68c82C59a7597f6b742FD53BeE6d6EFe325",
      "transactionHash": "0x5cf093872a7042e1b522aca449df956ec0be0d57e5f50bd4fe193de296fa79fc"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-05-11T14:22:36.898Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "deleteAuction(address)": {
        "notice": "Auction cannot be deleted until either:     (1) Token has been retrieved     (2) Token has expired     (3) Auction has closed with no bids Auction can only be deleted by admin or by the auction seller"
      }
    },
    "version": 1
  }
}